#include "node.h"

/***********************************************************************
  Задача 3. Да се дефинира шаблон на булева функция dupsub, която
  приема два параметъра: указател към линеен едносвързан списък и
  неотрицателно число k. Функцията да връща истина, ако в списъка има
  поне два различни подсписъка с дължина k, които са са еднакви
  елементи. Примери за такива списъци са 1, 2, 3, 4, 1, 2, 5 и 1, 2,
  3, 3, 3, 4 за k = 2.
************************************************************************/

/***********************************************************************
 РЕШЕНИЕ:
************************************************************************/

template <typename T>
bool commonprefix(node<T> *l1, node<T> *l2, unsigned k)
{
  while (l1 != nullptr && l2 != nullptr && l1->data == l2->data && k > 0)
  {
    l1 = l1->next;
    l2 = l2->next;
    k--;
  }
  return k == 0;
}

template <typename T>
bool dupsub(node<T> *l, unsigned k)
{
  
  node<T> *second = l;
  
  while (l != nullptr)
  {
    second = l->next;
    while (second != nullptr)
    {
      if (commonprefix(l,second,k))
      {
        return true;
      }
      second = second->next;
    }
    l = l->next;
  }
  return false;
}

/***********************************************************************
 КРАЙ НА РЕШЕНИЕТО
************************************************************************/

#define DOCTEST_CONFIG_IMPLEMENT
#include "doctest.h"

/***********************************************************************
  РАЗКОМЕНТРИАЙТЕ СЛЕДВАЩИЯ РЕД, ЗА ДА ВКЛЮЧИТЕ ТЕСТОВЕТЕ
************************************************************************/
#include "prob3_tests.h"

int main ()
{
    // пускане на тестовете
    doctest::Context().run();
    return 0;
}
